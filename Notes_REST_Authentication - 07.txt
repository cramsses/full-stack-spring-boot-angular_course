**********************  SECTIONS SEVEN **********************
BASIC AUTHENTICATION WITH SPRING BOOT

----------------------------------------------------------------------------------------
Step 71 - Overview of Security with Basic Auth and JWT

	JWT JSON Web Token

----------------------------------------------------------------------------------------
Step 72 - Setting up Spring Security

	Add dependency for security in pom.xml:
	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

	Adding this dependency spring in automathic redirect to login
		/login
		--> FORM BASE AUTHENTICATION
			defaults
			user: user
			pass: generated at start
				Using generated security password: f076b499-5de1-48ea-80ef-6a0336622ab0
		--> A session cookie is creaeted
		
		
	Header Authentication in RestClient
		Add authorization header
	
	Basic authorization header as part og the request

----------------------------------------------------------------------------------------
Step 73 - Configure standard userid and password

	In application.properties
		spring.security.user.name = user
		spring.security.user.password = password



----------------------------------------------------------------------------------------
Step 74 - Enhancing Angular Welcome Data Service to use Basic Authentication

	Block by CORS cause the Service has security implemented

	Add header in frontend angula data service
	
		executeHelloWorldBeanServiceWithPath(name) {
			//console.log('Executing Hello World Bean Service');
			let basicAuthHeaderString = this.createBasicAuthenticationHttpHeader();
			let headers = new HttpHeaders({
				Authorization: basicAuthHeaderString
			  })
			return this.http.get<HelloWorldBean>(`http://localhost:8080/hello-world-bean/path-variable/${name}`,
			{headers});
		  }

		createBasicAuthenticationHttpHeader() {
			let username = 'ramsses';
			let password = 'dummy';

			let basicAuthHeaderString = 'Basic ' + window.btoa(username + ':' + password);
			return basicAuthHeaderString;
		  }



----------------------------------------------------------------------------------------













----------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------

			
----------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------

	
	
----------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------



